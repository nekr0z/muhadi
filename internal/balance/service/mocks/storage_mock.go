// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nekr0z/muhadi/internal/balance/service (interfaces: Storage)
//
// Generated by this command:
//
//	mockgen -destination mocks/storage_mock.go -package mocks . Storage
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	balance "github.com/nekr0z/muhadi/internal/balance"
	gomock "go.uber.org/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
	isgomock struct{}
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// GetWithdrawals mocks base method.
func (m *MockStorage) GetWithdrawals(arg0 context.Context, arg1 string) ([]balance.Withdrawal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWithdrawals", arg0, arg1)
	ret0, _ := ret[0].([]balance.Withdrawal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWithdrawals indicates an expected call of GetWithdrawals.
func (mr *MockStorageMockRecorder) GetWithdrawals(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWithdrawals", reflect.TypeOf((*MockStorage)(nil).GetWithdrawals), arg0, arg1)
}

// SaveWithdrawal mocks base method.
func (m *MockStorage) SaveWithdrawal(arg0 context.Context, arg1 *balance.Withdrawal) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveWithdrawal", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveWithdrawal indicates an expected call of SaveWithdrawal.
func (mr *MockStorageMockRecorder) SaveWithdrawal(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveWithdrawal", reflect.TypeOf((*MockStorage)(nil).SaveWithdrawal), arg0, arg1)
}

// TotalWithdrawn mocks base method.
func (m *MockStorage) TotalWithdrawn(arg0 context.Context, arg1 string) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TotalWithdrawn", arg0, arg1)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TotalWithdrawn indicates an expected call of TotalWithdrawn.
func (mr *MockStorageMockRecorder) TotalWithdrawn(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TotalWithdrawn", reflect.TypeOf((*MockStorage)(nil).TotalWithdrawn), arg0, arg1)
}
